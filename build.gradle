plugins {
    id 'java'
    id 'application'
    id 'com.vaadin' version '23.0.0.alpha2'
}

defaultTasks("clean", "build")

// don't use Jetty 10 - requres Java 11
// don't use Jetty 11+ - uses jakarta.Servlet instead of javax.Servlet which makes it incompatible with Vaadin
def jettyVersion = "9.4.43.v20210629"

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
}

dependencies {
    // Vaadin 14
    implementation("com.vaadin:vaadin-core:23.0.0.alpha2")
    implementation("javax.servlet:javax.servlet-api:4.0.1")

    // Embedded Jetty dependencies
    implementation("org.eclipse.jetty:jetty-continuation:${jettyVersion}")
    implementation("org.eclipse.jetty:jetty-webapp:${jettyVersion}")
    implementation("org.eclipse.jetty.websocket:websocket-server:${jettyVersion}")
    implementation("org.eclipse.jetty.websocket:javax-websocket-server-impl:${jettyVersion}") {
        exclude(module: "javax.websocket-client-api")
    }

    implementation('org.jetbrains:annotations:22.0.0')

    // logging
    // currently we are logging through the SLF4J API to SLF4J-Simple. See src/main/resources/simplelogger.properties file for the logger configuration
    implementation('org.slf4j:slf4j-simple:1.7.32')

    // Fast Vaadin unit-testing with Karibu-Testing: https://github.com/mvysny/karibu-testing
    testImplementation("com.github.mvysny.kaributesting:karibu-testing-v10:1.3.9")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = "FULL"
    }
}

application {
    mainClassName = "com.vaadin.starter.skeleton.Main"
}

vaadin {
//    pnpmEnable = false  // workaround for https://github.com/vaadin/flow/issues/10571
}

